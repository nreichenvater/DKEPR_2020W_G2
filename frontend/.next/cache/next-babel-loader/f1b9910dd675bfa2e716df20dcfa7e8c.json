{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\n\nvar AuthService = /*#__PURE__*/function () {\n  function AuthService() {\n    _classCallCheck(this, AuthService);\n\n    this.loggedIn = false;\n  }\n\n  _createClass(AuthService, [{\n    key: \"login\",\n    value: function login(body, callback) {\n      console.log(\"sende login request\", body);\n      API.post(\"/login\", body).then(function (res) {\n        if (res.status === 200) {\n          console.log(res);\n          localStorage.setItem('user', res.data.user.mail);\n          localStorage.setItem('Authorization', res.headers.authorization);\n          callback(res);\n        }\n      })[\"catch\"](function (err) {\n        console.log(err);\n        callback(err);\n      });\n    }\n  }, {\n    key: \"logout\",\n    value: function logout() {\n      localStorage.removeItem('user');\n      localStorage.removeItem('Authorization');\n    }\n  }, {\n    key: \"isLoggedIn\",\n    value: function () {\n      var _isLoggedIn = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var _this = this;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                console.log(\"checke eingeloggt mit token \" + localStorage.getItem('Authorization'));\n\n                if (!this.hasToken()) {\n                  _context.next = 5;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", new Promise(function (resolve, reject) {\n                  API.get('/user', _this.getHeader()).then(function (res) {\n                    if (res.status === 200) {\n                      resolve(true);\n                    }\n                  })[\"catch\"](function (err) {\n                    console.log(err);\n                    localStorage.removeItem('Authorization');\n                    localStorage.removeItem('user');\n                    resolve(false);\n                  });\n                }));\n\n              case 5:\n                console.log(\"kein token\");\n                return _context.abrupt(\"return\", false);\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function isLoggedIn() {\n        return _isLoggedIn.apply(this, arguments);\n      }\n\n      return isLoggedIn;\n    }()\n  }, {\n    key: \"register\",\n    value: function register(mailInput, passwordInput, repeatedPasswordInput, com, successCallback) {\n      console.log(com);\n      API.post(\"/register\", {\n        mail: mailInput,\n        password: passwordInput,\n        passwordConfirm: repeatedPasswordInput,\n        commercial: com\n      }).then(function (res) {\n        if (res.status === 200) {\n          successCallback(res);\n        }\n      })[\"catch\"](function (err) {\n        successCallback(err);\n      });\n    }\n  }, {\n    key: \"hasToken\",\n    value: function hasToken() {\n      if (localStorage.getItem('Authorization') != null) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"getHeader\",\n    value: function getHeader() {\n      return Object.create({\n        headers: {\n          Authorization: localStorage.getItem('Authorization'),\n          Username: localStorage.getItem('user')\n        }\n      });\n    }\n  }]);\n\n  return AuthService;\n}();\n\nexport default new AuthService();","map":{"version":3,"sources":["C:/Users/Nico/Dropbox/Studium/5. Semester/DKE PR/frontend/components/auth/authservice.js"],"names":["AuthService","loggedIn","body","callback","console","log","API","post","then","res","status","localStorage","setItem","data","user","mail","headers","authorization","err","removeItem","getItem","hasToken","Promise","resolve","reject","get","getHeader","mailInput","passwordInput","repeatedPasswordInput","com","successCallback","password","passwordConfirm","commercial","Object","create","Authorization","Username"],"mappings":"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","sourcesContent":["\r\n\r\nclass AuthService {\r\n    constructor(){\r\n        this.loggedIn = false;\r\n    }\r\n\r\n    login(body, callback){\r\n        console.log(\"sende login request\", body);\r\n        API.post(`/login`, body)\r\n        .then(res => {\r\n            if(res.status === 200){\r\n                console.log(res);\r\n                localStorage.setItem('user', res.data.user.mail);\r\n                localStorage.setItem('Authorization', res.headers.authorization);\r\n                callback(res);\r\n            }\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n            callback(err);\r\n        })\r\n    }\r\n\r\n    logout(){\r\n        localStorage.removeItem('user');\r\n        localStorage.removeItem('Authorization');\r\n    }\r\n\r\n    async isLoggedIn(){\r\n        console.log(\"checke eingeloggt mit token \" + localStorage.getItem('Authorization'));\r\n        if(this.hasToken()){\r\n            return new Promise((resolve, reject) => {\r\n                API.get('/user', this.getHeader())\r\n                .then(res => {\r\n                    if(res.status === 200){\r\n                        resolve(true);\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                    localStorage.removeItem('Authorization');\r\n                    localStorage.removeItem('user');\r\n                    resolve(false);\r\n                })\r\n            });\r\n        }\r\n        else {\r\n            console.log(\"kein token\");\r\n            return false;\r\n        }\r\n    }\r\n\r\n    register(mailInput, passwordInput, repeatedPasswordInput, com, successCallback){\r\n            console.log(com);\r\n\r\n            API.post(`/register`, {\r\n                mail: mailInput,\r\n                password: passwordInput,\r\n                passwordConfirm: repeatedPasswordInput,\r\n                commercial: com\r\n            })\r\n            .then(res => {\r\n                if(res.status === 200){\r\n                    successCallback(res);\r\n                }\r\n            })\r\n            .catch(err => {\r\n                successCallback(err);\r\n            });\r\n    }\r\n\r\n    hasToken(){\r\n        if(localStorage.getItem('Authorization') != null){\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getHeader(){\r\n        return Object.create({\r\n            headers: {\r\n                Authorization: localStorage.getItem('Authorization'),\r\n                Username: localStorage.getItem('user')\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport default new AuthService();"]},"metadata":{},"sourceType":"module"}