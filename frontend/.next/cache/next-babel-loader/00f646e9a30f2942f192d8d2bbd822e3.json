{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport API from '../../api';\n\nvar AuthService = /*#__PURE__*/function () {\n  function AuthService() {\n    _classCallCheck(this, AuthService);\n\n    this.loggedIn = false;\n  }\n\n  _createClass(AuthService, [{\n    key: \"login\",\n    value: function login(body, callback) {\n      console.log(\"sende login request\", body);\n      API.post(\"/login\", body).then(function (res) {\n        if (res.status === 200) {\n          console.log(res);\n          localStorage.setItem('user', res.data.username);\n          localStorage.setItem('Authorization', res.data.token);\n          callback(res);\n        }\n      })[\"catch\"](function (err) {\n        console.log(err);\n        callback(err);\n      });\n    }\n  }, {\n    key: \"logout\",\n    value: function logout() {\n      localStorage.removeItem('user');\n      localStorage.removeItem('Authorization');\n    }\n  }, {\n    key: \"isLoggedIn\",\n    value: function () {\n      var _isLoggedIn = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var _this = this;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                console.log(\"checke eingeloggt mit token \" + localStorage.getItem('Authorization'));\n\n                if (!this.hasToken()) {\n                  _context.next = 5;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", new Promise(function (resolve, reject) {\n                  API.get('/user', _this.getHeader()).then(function (res) {\n                    if (res.status === 200) {\n                      resolve(true);\n                    }\n                  })[\"catch\"](function (err) {\n                    console.log(err);\n                    localStorage.removeItem('Authorization');\n                    localStorage.removeItem('user');\n                    resolve(false);\n                  });\n                }));\n\n              case 5:\n                console.log(\"kein token\");\n                return _context.abrupt(\"return\", false);\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function isLoggedIn() {\n        return _isLoggedIn.apply(this, arguments);\n      }\n\n      return isLoggedIn;\n    }()\n  }, {\n    key: \"register\",\n    value: function register(mailInput, passwordInput, repeatedPasswordInput, successCallback) {\n      API.post(\"/register\", {\n        username: mailInput,\n        password: passwordInput,\n        repeatedPassword: repeatedPasswordInput\n      }).then(function (res) {\n        if (res.status === 200) {\n          successCallback(res);\n        }\n      })[\"catch\"](function (err) {\n        successCallback(err);\n      });\n    }\n  }, {\n    key: \"hasToken\",\n    value: function hasToken() {\n      if (localStorage.getItem('Authorization') != null) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"getHeader\",\n    value: function getHeader() {\n      var token = \"Bearer \" + localStorage.getItem('Authorization');\n      return Object.create({\n        headers: {\n          Authorization: token,\n          user: localStorage.getItem('user')\n        }\n      });\n    }\n  }]);\n\n  return AuthService;\n}();\n\nexport default new AuthService();","map":{"version":3,"sources":["C:/Users/Nico/Dropbox/Studium/5. Semester/DKE PR/frontend/components/auth/authservice.js"],"names":["API","AuthService","loggedIn","body","callback","console","log","post","then","res","status","localStorage","setItem","data","username","token","err","removeItem","getItem","hasToken","Promise","resolve","reject","get","getHeader","mailInput","passwordInput","repeatedPasswordInput","successCallback","password","repeatedPassword","Object","create","headers","Authorization","user"],"mappings":"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","sourcesContent":["\r\nimport API from '../../api';\r\n\r\nclass AuthService {\r\n    constructor(){\r\n        this.loggedIn = false;\r\n    }\r\n\r\n    login(body, callback){\r\n        console.log(\"sende login request\", body);\r\n        API.post(`/login`, body)\r\n        .then(res => {\r\n            if(res.status === 200){\r\n                console.log(res);\r\n                localStorage.setItem('user', res.data.username);\r\n                localStorage.setItem('Authorization', res.data.token);\r\n                callback(res);\r\n            }\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n            callback(err);\r\n        })\r\n    }\r\n\r\n    logout(){\r\n        localStorage.removeItem('user');\r\n        localStorage.removeItem('Authorization');\r\n    }\r\n\r\n    async isLoggedIn(){\r\n        console.log(\"checke eingeloggt mit token \" + localStorage.getItem('Authorization'));\r\n\r\n        if(this.hasToken()){\r\n            return new Promise((resolve, reject) => {\r\n                API.get('/user', this.getHeader())\r\n                .then(res => {\r\n                    if(res.status === 200){\r\n                        resolve(true);\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                    localStorage.removeItem('Authorization');\r\n                    localStorage.removeItem('user');\r\n                    resolve(false);\r\n                })\r\n            });\r\n        }\r\n        else {\r\n            console.log(\"kein token\");\r\n            return false;\r\n        }\r\n    }\r\n\r\n    register(mailInput, passwordInput, repeatedPasswordInput, successCallback){\r\n\r\n            API.post(`/register`, {\r\n                username: mailInput,\r\n                password: passwordInput,\r\n                repeatedPassword: repeatedPasswordInput\r\n            })\r\n            .then(res => {\r\n                if(res.status === 200){\r\n                    successCallback(res);\r\n                }\r\n            })\r\n            .catch(err => {\r\n                successCallback(err);\r\n            });\r\n    }\r\n\r\n    hasToken(){\r\n        if(localStorage.getItem('Authorization') != null){\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getHeader(){\r\n        const token = \"Bearer \" + localStorage.getItem('Authorization');\r\n        return Object.create({\r\n            headers: {\r\n                Authorization: token,\r\n                user: localStorage.getItem('user')\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport default new AuthService();"]},"metadata":{},"sourceType":"module"}