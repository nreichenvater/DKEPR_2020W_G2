{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Nico\\\\Dropbox\\\\Studium\\\\5. Semester\\\\DKE PR\\\\frontend\\\\pages\\\\recentposts.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Link from 'next/link';\nimport withAuth from '../components/auth/withAuth';\nimport API from '../api';\nimport Auth from '../components/auth/authservice';\nimport Router from 'next/router';\n\nvar Recentposts = /*#__PURE__*/function (_Component) {\n  _inherits(Recentposts, _Component);\n\n  var _super = _createSuper(Recentposts);\n\n  function Recentposts(props) {\n    var _this;\n\n    _classCallCheck(this, Recentposts);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"logOut\", function (e) {\n      if (e) {\n        e.preventDefault();\n      }\n\n      localStorage.removeItem(\"Authorization\");\n      localStorage.removeItem(\"user\");\n      Router.push(\"/login\");\n    });\n\n    _this.state = {\n      loggedIn: true,\n      newPosts: [],\n      oldPosts: []\n    };\n    return _this;\n  }\n\n  _createClass(Recentposts, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      API.get('/recent', Auth.getHeader()).then(function (res) {\n        if (res.status === 200) {\n          var newPosts = res.data.postlist;\n          var oldPosts = res.data.postlist2;\n          newPosts.sort(function (a, b) {\n            return b._id.timestamp - a._id.timestamp;\n          });\n          oldPosts.sort(function (a, b) {\n            return b._id.timestamp - a._id.timestamp;\n          });\n\n          _this2.setState({\n            newPosts: newPosts,\n            oldPosts: oldPosts\n          }, function () {\n            return console.log(newPosts + oldPosts);\n          });\n        }\n      })[\"catch\"](function (err) {\n        console.log(\"error fetching recent posts\");\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return __jsx(\"div\", {\n        className: \"page\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }\n      }, __jsx(\"div\", {\n        id: \"HeaderSection\",\n        \"class\": \"defaultsection header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }\n      }, __jsx(\"div\", {\n        \"class\": \"defaultcontainer header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }\n      }, __jsx(\"div\", {\n        \"class\": \"navigationdiv nomarginbottom\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }\n      }, __jsx(Link, {\n        href: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 29\n        }\n      }, __jsx(\"a\", {\n        href: \"#\",\n        className: \"logo\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 44\n        }\n      }, \"Mooder\")), __jsx(\"div\", {\n        \"class\": \"headerspace\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 29\n        }\n      }), __jsx(\"ul\", {\n        className: \"headermenu\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 29\n        }\n      }, this.state.loggedIn ? __jsx(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 37\n        }\n      }, __jsx(\"a\", {\n        className: \"headermenuitem\",\n        onClick: this.logOut,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 41\n        }\n      }, \"Ausloggen\")) : __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 39\n        }\n      }, __jsx(\"li\", {\n        className: \"headermenuitem fat\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 44\n        }\n      }, \"Registrieren\"), __jsx(\"li\", {\n        className: \"headermenuitem\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 96\n        }\n      }, \"Einloggen\")))))), __jsx(\"div\", {\n        \"class\": \"defaultsection main\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }\n      }, __jsx(\"div\", {\n        \"class\": \"defaultcontainer index\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }\n      }, __jsx(\"div\", {\n        className: \"sidemenudiv\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }\n      }, __jsx(\"div\", {\n        className: \"sidemenulist\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 29\n        }\n      }, __jsx(Link, {\n        href: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 33\n        }\n      }, __jsx(\"a\", {\n        href: \"#\",\n        className: \"sidemenulistentry\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 48\n        }\n      }, \"Feed / Post Erstellen\")), __jsx(Link, {\n        href: \"/recentposts\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 33\n        }\n      }, __jsx(\"a\", {\n        href: \"#\",\n        className: \"sidemenulistentry selected\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 59\n        }\n      }, \"Aktuelle Posts\")), __jsx(Link, {\n        href: \"/personalposts\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 33\n        }\n      }, __jsx(\"a\", {\n        href: \"#\",\n        className: \"sidemenulistentry\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 61\n        }\n      }, \"Meine Posts\")), __jsx(Link, {\n        href: \"/friends\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 33\n        }\n      }, __jsx(\"a\", {\n        href: \"#\",\n        className: \"sidemenulistentry\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 55\n        }\n      }, \"Freunde\")), __jsx(Link, {\n        href: \"/search\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 33\n        }\n      }, __jsx(\"a\", {\n        href: \"#\",\n        className: \"sidemenulistentry\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 54\n        }\n      }, \"Suche\")))), __jsx(\"div\", {\n        className: \"contentdiv\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }\n      }, __jsx(\"div\", {\n        className: \"feeddiv\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 29\n        }\n      }, __jsx(\"div\", {\n        className: \"postheading\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 29\n        }\n      }, \"Aktuell\"), this.state.newPosts.map(function (post) {\n        return __jsx(\"div\", {\n          className: \"post\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 41\n          }\n        }, post.mood === \"happy\" ? __jsx(\"img\", {\n          src: \"/images/015-smile-1.png\",\n          loading: \"lazy\",\n          alt: \"\",\n          className: \"image emoti posted\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 57\n          }\n        }) : post.mood === \"neutral\" ? __jsx(\"img\", {\n          src: \"/images/034-neutral.png\",\n          loading: \"lazy\",\n          alt: \"\",\n          className: \"image emoti posted\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 57\n          }\n        }) : post.mood === \"sad\" ? __jsx(\"img\", {\n          src: \"/images/021-sad.png\",\n          loading: \"lazy\",\n          alt: \"\",\n          className: \"image emoti posted\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 57\n          }\n        }) : __jsx(\"div\", {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 57\n          }\n        }), __jsx(\"div\", {\n          className: \"postcontentdiv\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 45\n          }\n        }, __jsx(\"div\", {\n          className: \"postedbydiv\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 49\n          }\n        }, post.userid), __jsx(\"div\", {\n          className: \"posteddatediv\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 49\n          }\n        }, post.timestamp), __jsx(\"div\", {\n          \"class\": \"postseparator\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 49\n          }\n        }), __jsx(\"div\", {\n          className: \"postedtextdiv\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 49\n          }\n        }, post.post)));\n      }), __jsx(\"div\", {\n        className: \"postheading\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 32\n        }\n      }, \"Fr\\xFCher\"), this.state.oldPosts.map(function (post) {\n        return __jsx(\"div\", {\n          className: \"post\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 41\n          }\n        }, post.mood === \"happy\" ? __jsx(\"img\", {\n          src: \"/images/015-smile-1.png\",\n          loading: \"lazy\",\n          alt: \"\",\n          className: \"image emoti posted\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 57\n          }\n        }) : post.mood === \"neutral\" ? __jsx(\"img\", {\n          src: \"/images/034-neutral.png\",\n          loading: \"lazy\",\n          alt: \"\",\n          className: \"image emoti posted\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 57\n          }\n        }) : post.mood === \"sad\" ? __jsx(\"img\", {\n          src: \"/images/021-sad.png\",\n          loading: \"lazy\",\n          alt: \"\",\n          className: \"image emoti posted\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 57\n          }\n        }) : __jsx(\"div\", {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 57\n          }\n        }), __jsx(\"div\", {\n          className: \"postcontentdiv\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 45\n          }\n        }, __jsx(\"div\", {\n          className: \"postedbydiv\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 49\n          }\n        }, post.userid), __jsx(\"div\", {\n          className: \"posteddatediv\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 49\n          }\n        }, post.timestamp), __jsx(\"div\", {\n          \"class\": \"postseparator\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 49\n          }\n        }), __jsx(\"div\", {\n          className: \"postedtextdiv\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 49\n          }\n        }, post.post)));\n      }))))), __jsx(\"div\", {\n        className: \"blank\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return Recentposts;\n}(Component);\n\nexport default _c = withAuth(Recentposts);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["C:/Users/Nico/Dropbox/Studium/5. Semester/DKE PR/frontend/pages/recentposts.js"],"names":["React","Component","Link","withAuth","API","Auth","Router","Recentposts","props","e","preventDefault","localStorage","removeItem","push","state","loggedIn","newPosts","oldPosts","get","getHeader","then","res","status","data","postlist","postlist2","sort","a","b","_id","timestamp","setState","console","log","err","logOut","map","post","mood","userid"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Link from 'next/link';\r\nimport withAuth from '../components/auth/withAuth';\r\nimport API from '../api';\r\nimport Auth from '../components/auth/authservice';\r\nimport Router from 'next/router';\r\n\r\nclass Recentposts extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            loggedIn: true,\r\n            newPosts: [],\r\n            oldPosts: []\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        API.get('/recent', Auth.getHeader())\r\n        .then(res => {\r\n            if(res.status === 200){\r\n                const newPosts = res.data.postlist;\r\n                const oldPosts = res.data.postlist2;\r\n                newPosts.sort(function(a, b){return b._id.timestamp - a._id.timestamp});\r\n                oldPosts.sort(function(a, b){return b._id.timestamp - a._id.timestamp});\r\n                this.setState({ newPosts, oldPosts }, () => console.log(newPosts + oldPosts));\r\n            }\r\n        })\r\n        .catch(err => {\r\n            console.log(\"error fetching recent posts\");\r\n        });\r\n    }\r\n\r\n    logOut = (e) => {\r\n        if(e){\r\n            e.preventDefault();\r\n        }\r\n        localStorage.removeItem(\"Authorization\");\r\n        localStorage.removeItem(\"user\");\r\n        Router.push(\"/login\");\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"page\">\r\n                <div id=\"HeaderSection\" class=\"defaultsection header\">\r\n                    <div class=\"defaultcontainer header\">\r\n                        <div class=\"navigationdiv nomarginbottom\">\r\n                            <Link href=\"/\"><a href=\"#\" className=\"logo\">Mooder</a></Link>\r\n                            <div class=\"headerspace\" />\r\n                            <ul className=\"headermenu\">\r\n                                {\r\n                                    this.state.loggedIn ?\r\n                                    <li><a className=\"headermenuitem\" onClick={this.logOut} >Ausloggen</a></li>\r\n                                    : <div><li className=\"headermenuitem fat\">Registrieren</li><li className=\"headermenuitem\">Einloggen</li></div>\r\n                                }\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"defaultsection main\">\r\n                    <div class=\"defaultcontainer index\">\r\n                        <div className=\"sidemenudiv\">\r\n                            <div className=\"sidemenulist\">\r\n                                <Link href=\"/\"><a href=\"#\" className=\"sidemenulistentry\">Feed / Post Erstellen</a></Link>\r\n                                <Link href=\"/recentposts\"><a href=\"#\" className=\"sidemenulistentry selected\">Aktuelle Posts</a></Link>\r\n                                <Link href=\"/personalposts\"><a href=\"#\" className=\"sidemenulistentry\">Meine Posts</a></Link>\r\n                                <Link href=\"/friends\"><a href=\"#\" className=\"sidemenulistentry\">Freunde</a></Link>\r\n                                <Link href=\"/search\"><a href=\"#\" className=\"sidemenulistentry\">Suche</a></Link>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"contentdiv\">\r\n                            <div className=\"feeddiv\">\r\n                            <div className=\"postheading\">Aktuell</div>\r\n                            {\r\n                                    this.state.newPosts.map(post => (\r\n                                        <div className=\"post\">\r\n                                                {\r\n                                                    post.mood === \"happy\" ? (\r\n                                                        <img \r\n                                                            src=\"/images/015-smile-1.png\"\r\n                                                            loading=\"lazy\" \r\n                                                            alt=\"\" \r\n                                                            className=\"image emoti posted\" \r\n                                                        />\r\n                                                    ) : post.mood === \"neutral\" ? (\r\n                                                        <img \r\n                                                            src=\"/images/034-neutral.png\"\r\n                                                            loading=\"lazy\" \r\n                                                            alt=\"\" \r\n                                                            className=\"image emoti posted\" \r\n                                                        />\r\n                                                    ) : post.mood === \"sad\" ? (\r\n                                                        <img \r\n                                                        src=\"/images/021-sad.png\"\r\n                                                        loading=\"lazy\" \r\n                                                        alt=\"\" \r\n                                                        className=\"image emoti posted\" \r\n                                                        />\r\n                                                    ) : (\r\n                                                        <div />\r\n                                                    )\r\n                                                }\r\n                                            <div className=\"postcontentdiv\">\r\n                                                <div className=\"postedbydiv\">\r\n                                                    {post.userid}\r\n                                                </div>\r\n                                                <div className=\"posteddatediv\">\r\n                                                    {post.timestamp}\r\n                                                </div>\r\n                                                <div class=\"postseparator\" />\r\n                                                <div className=\"postedtextdiv\">\r\n                                                    {post.post}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    ))\r\n                                }\r\n                               <div className=\"postheading\">Früher</div>\r\n                               {\r\n                                    this.state.oldPosts.map(post => (\r\n                                        <div className=\"post\">\r\n                                                {\r\n                                                    post.mood === \"happy\" ? (\r\n                                                        <img \r\n                                                            src=\"/images/015-smile-1.png\"\r\n                                                            loading=\"lazy\" \r\n                                                            alt=\"\" \r\n                                                            className=\"image emoti posted\" \r\n                                                        />\r\n                                                    ) : post.mood === \"neutral\" ? (\r\n                                                        <img \r\n                                                            src=\"/images/034-neutral.png\"\r\n                                                            loading=\"lazy\" \r\n                                                            alt=\"\" \r\n                                                            className=\"image emoti posted\" \r\n                                                        />\r\n                                                    ) : post.mood === \"sad\" ? (\r\n                                                        <img \r\n                                                        src=\"/images/021-sad.png\"\r\n                                                        loading=\"lazy\" \r\n                                                        alt=\"\" \r\n                                                        className=\"image emoti posted\" \r\n                                                        />\r\n                                                    ) : (\r\n                                                        <div />\r\n                                                    )\r\n                                                }\r\n                                            <div className=\"postcontentdiv\">\r\n                                                <div className=\"postedbydiv\">\r\n                                                    {post.userid}\r\n                                                </div>\r\n                                                <div className=\"posteddatediv\">\r\n                                                    {post.timestamp}\r\n                                                </div>\r\n                                                <div class=\"postseparator\" />\r\n                                                <div className=\"postedtextdiv\">\r\n                                                    {post.post}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    ))\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"blank\" />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withAuth(Recentposts);"]},"metadata":{},"sourceType":"module"}